[clusterparameter]

maxCluster = 8

minStationAroundInitialCluster = 30
initialstationdistance = 10
cutoff = 10
runs = 1


[unit in deegree]
#minimum distance of initial centroids
centroidminDistance = 10

comparedelta = 2

#endcheck
#maximum distance from station to cluster center
stationdistance = 15
minClusterStation = 15


[traveltime calculation options]

tttopt = -ph P

[algorithm method]
#2 kmeans
cam = 2

[general parameter]

#depths= from,to,steps relative to depth in origin config
depths=0,0,5
# run each depth step with a number of filter(s), used for high vs. low freq.
filters=2
# dimx of grid
dimx = 40
# dimy of grid
dimy = 40
# min distance to origin of stations
minDist = 23
# max distance to origin of stations
maxDist = 93
# step length in s for first filter.
step = 1
# window length in s for first filter.
winlen = 1

# step length in s for second filter (if).
step_f2 = 1
# window length in s for second filter (if.
winlen_f2 = 1

# length of data before phase onset in s.
forerun = 50
# length of data after phase onset in s.
duration = 100
security = 100
# gridspacing in degree
gridspacing = 0.02
# Phase to consider [right now only P possible!]
ttphase=P
# resampling data to frequency in Hz, should match your gf store
new_frequence = 2
# if download of was done with pyrocko_download command, set to 1
pyrocko_download = 0
# if download with pyrocko was done you can choose between velocity and displacement
quantity = velocity
weight_by_noise = 1
# do synthetic test with a real station distribution, specify the
# parameters in eventfolder with event.syn
synthetic_test = 0
# add noise to the synthetic, based on the variance of the real station
# covariance of noise not enabled right now
synthetic_test_add_noise = 0
# shift the traces to theoretical onset, disregarding curved travel times
# produces better crosscorrelations, but only valid for small arrays
shift_by_phase_onset = 0
# use a phase weighted stacking
shift_by_phase_pws = 0
# shift by crosscorrelation
shift_by_phase_cc = 0
# if colosseo synthetics should be used, set to 1
colesseo_input = 0
# give the colosseo scenario.yml file
colosseo_scenario_yml = /media/asteinbe/data/asteinbe/mydl/scenario.yml
# create output of compressed sensing as grid [warning: experimental]
cs = 0
# Optimize for pyrocko sources with array responses as input with the semblance(all)
optimize = 0
optimize_all = 0
#Search for semblance maximum from all arrays at the same time (1) or seperate and combine afterwards (0)
combine_all = 0
#normalize to the maximum semblance
norm_all=1

# Plot the semblance after each depth
inspect_semb = 1
# Calculate the array response
array_response = 0
#if not using pyrocko download:
export_unfiltered=false
export_filtered=false
export_resampled=false

[process parameter]
#number of cores for traveltime calculation
ncore = 2

[focal mechanism solution values from event file]
#only = 1 possible
fm = 1

[xcorrskript parameter]

xcorr=1
# for manual qc set autoxcorrcorrectur to 1:
autoxcorrcorrectur = 0
# crosscorrelation threshold for excluding stations
xcorrtreshold = 0.6

#filter for referencestation for automatic picker
#should match your filter
refstationfreqmin=0.025
refstationfreqmax=0.24
refstationcorners=2
refstationzph=false
#STA/LTA parameter
refsta=0.5
reflta=4


[array parameter]
networks=

[beamforming method]
#delaysum
#capon
beam = delaysum

[filterparameter]
filterswitch=1
###############################################################
#Parameter for first filter
#bp butterworth

# low cut corner frequency
flo = 0.15

# high cut corner frequency
fhi = 0.24

# number of filter sections
ns = 4

# TRUE -> zero phase filter
zph = false


###############################################################
#Parameter for second filter
#bp butterworth

# low cut corner frequency
flo2 = 0.25

# high cut corner frequency
fhi2 = 2.0

# number of filter sections
ns2 = 3

# TRUE -> zero phase filter
zph2 = false



###############################################################
#Alternative lowpass filter example
#lowpass butterworth
l_fc = 1.5
# number of filter sections
l_ns = 4
# TRUE -> zero phase filter
l_zph = false

###############################################################
#Alternative highpass filter example
#highpass butterworth
h_fc = 2
# number of filter sections
h_ns = 4
# TRUE -> zero phase filter
h_zph = false

##################################################################
